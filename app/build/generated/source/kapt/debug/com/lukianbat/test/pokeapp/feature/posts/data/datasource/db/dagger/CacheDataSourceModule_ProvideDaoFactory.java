// Generated by Dagger (https://google.github.io/dagger).
package com.lukianbat.test.pokeapp.feature.posts.data.datasource.db.dagger;

import com.lukianbat.test.pokeapp.core.data.AppDatabase;
import com.lukianbat.test.pokeapp.feature.posts.data.datasource.db.PokemonDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class CacheDataSourceModule_ProvideDaoFactory implements Factory<PokemonDao> {
  private final CacheDataSourceModule module;

  private final Provider<AppDatabase> databaseProvider;

  public CacheDataSourceModule_ProvideDaoFactory(
      CacheDataSourceModule module, Provider<AppDatabase> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public PokemonDao get() {
    return provideDao(module, databaseProvider.get());
  }

  public static CacheDataSourceModule_ProvideDaoFactory create(
      CacheDataSourceModule module, Provider<AppDatabase> databaseProvider) {
    return new CacheDataSourceModule_ProvideDaoFactory(module, databaseProvider);
  }

  public static PokemonDao provideDao(CacheDataSourceModule instance, AppDatabase database) {
    return Preconditions.checkNotNull(
        instance.provideDao(database), "Cannot return null from a non-@Nullable @Provides method");
  }
}
