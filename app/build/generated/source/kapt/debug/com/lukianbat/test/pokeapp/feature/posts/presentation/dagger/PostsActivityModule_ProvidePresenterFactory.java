// Generated by Dagger (https://google.github.io/dagger).
package com.lukianbat.test.pokeapp.feature.posts.presentation.dagger;

import com.lukianbat.test.pokeapp.feature.posts.domain.usecase.GetPokemonsUseCase;
import com.lukianbat.test.pokeapp.feature.posts.presentation.PokemonListActivity;
import com.lukianbat.test.pokeapp.feature.posts.presentation.PokemonListViewModel;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class PostsActivityModule_ProvidePresenterFactory
    implements Factory<PokemonListViewModel> {
  private final PostsActivityModule module;

  private final Provider<PokemonListActivity> contextProvider;

  private final Provider<GetPokemonsUseCase> getPokemonsUseCaseProvider;

  public PostsActivityModule_ProvidePresenterFactory(
      PostsActivityModule module,
      Provider<PokemonListActivity> contextProvider,
      Provider<GetPokemonsUseCase> getPokemonsUseCaseProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.getPokemonsUseCaseProvider = getPokemonsUseCaseProvider;
  }

  @Override
  public PokemonListViewModel get() {
    return providePresenter(module, contextProvider.get(), getPokemonsUseCaseProvider.get());
  }

  public static PostsActivityModule_ProvidePresenterFactory create(
      PostsActivityModule module,
      Provider<PokemonListActivity> contextProvider,
      Provider<GetPokemonsUseCase> getPokemonsUseCaseProvider) {
    return new PostsActivityModule_ProvidePresenterFactory(
        module, contextProvider, getPokemonsUseCaseProvider);
  }

  public static PokemonListViewModel providePresenter(
      PostsActivityModule instance,
      PokemonListActivity context,
      GetPokemonsUseCase getPokemonsUseCase) {
    return Preconditions.checkNotNull(
        instance.providePresenter(context, getPokemonsUseCase),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
