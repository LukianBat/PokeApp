// Generated by Dagger (https://google.github.io/dagger).
package com.lukianbat.test.pokeapp.feature.posts.data.repository;

import com.lukianbat.test.pokeapp.feature.posts.data.datasource.api.PokemonListApiDataSource;
import com.lukianbat.test.pokeapp.feature.posts.data.datasource.db.PokemonCacheDataSource;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class PokemonsRepositoryImpl_Factory implements Factory<PokemonsRepositoryImpl> {
  private final Provider<PokemonListApiDataSource> apiDataSourceProvider;

  private final Provider<PokemonCacheDataSource> cacheDataSourceProvider;

  private final Provider<PokemonsConverter> pokemonsConverterProvider;

  public PokemonsRepositoryImpl_Factory(
      Provider<PokemonListApiDataSource> apiDataSourceProvider,
      Provider<PokemonCacheDataSource> cacheDataSourceProvider,
      Provider<PokemonsConverter> pokemonsConverterProvider) {
    this.apiDataSourceProvider = apiDataSourceProvider;
    this.cacheDataSourceProvider = cacheDataSourceProvider;
    this.pokemonsConverterProvider = pokemonsConverterProvider;
  }

  @Override
  public PokemonsRepositoryImpl get() {
    return new PokemonsRepositoryImpl(
        apiDataSourceProvider.get(),
        cacheDataSourceProvider.get(),
        pokemonsConverterProvider.get());
  }

  public static PokemonsRepositoryImpl_Factory create(
      Provider<PokemonListApiDataSource> apiDataSourceProvider,
      Provider<PokemonCacheDataSource> cacheDataSourceProvider,
      Provider<PokemonsConverter> pokemonsConverterProvider) {
    return new PokemonsRepositoryImpl_Factory(
        apiDataSourceProvider, cacheDataSourceProvider, pokemonsConverterProvider);
  }

  public static PokemonsRepositoryImpl newInstance(
      PokemonListApiDataSource apiDataSource,
      PokemonCacheDataSource cacheDataSource,
      PokemonsConverter pokemonsConverter) {
    return new PokemonsRepositoryImpl(apiDataSource, cacheDataSource, pokemonsConverter);
  }
}
