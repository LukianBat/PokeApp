// Generated by Dagger (https://google.github.io/dagger).
package com.lukianbat.test.pokeapp.feature.posts.data.repository.dagger;

import com.lukianbat.test.pokeapp.feature.posts.data.datasource.api.PokemonListApiDataSource;
import com.lukianbat.test.pokeapp.feature.posts.data.datasource.db.PokemonCacheDataSource;
import com.lukianbat.test.pokeapp.feature.posts.data.repository.PokemonsConverter;
import com.lukianbat.test.pokeapp.feature.posts.data.repository.PokemonsRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class PokemonsRepositoryModule_ProvidePokemonsRepositoryFactory
    implements Factory<PokemonsRepository> {
  private final PokemonsRepositoryModule module;

  private final Provider<PokemonListApiDataSource> apiDataSourceProvider;

  private final Provider<PokemonCacheDataSource> cacheDataSourceProvider;

  private final Provider<PokemonsConverter> pokemonsConverterProvider;

  public PokemonsRepositoryModule_ProvidePokemonsRepositoryFactory(
      PokemonsRepositoryModule module,
      Provider<PokemonListApiDataSource> apiDataSourceProvider,
      Provider<PokemonCacheDataSource> cacheDataSourceProvider,
      Provider<PokemonsConverter> pokemonsConverterProvider) {
    this.module = module;
    this.apiDataSourceProvider = apiDataSourceProvider;
    this.cacheDataSourceProvider = cacheDataSourceProvider;
    this.pokemonsConverterProvider = pokemonsConverterProvider;
  }

  @Override
  public PokemonsRepository get() {
    return providePokemonsRepository(
        module,
        apiDataSourceProvider.get(),
        cacheDataSourceProvider.get(),
        pokemonsConverterProvider.get());
  }

  public static PokemonsRepositoryModule_ProvidePokemonsRepositoryFactory create(
      PokemonsRepositoryModule module,
      Provider<PokemonListApiDataSource> apiDataSourceProvider,
      Provider<PokemonCacheDataSource> cacheDataSourceProvider,
      Provider<PokemonsConverter> pokemonsConverterProvider) {
    return new PokemonsRepositoryModule_ProvidePokemonsRepositoryFactory(
        module, apiDataSourceProvider, cacheDataSourceProvider, pokemonsConverterProvider);
  }

  public static PokemonsRepository providePokemonsRepository(
      PokemonsRepositoryModule instance,
      PokemonListApiDataSource apiDataSource,
      PokemonCacheDataSource cacheDataSource,
      PokemonsConverter pokemonsConverter) {
    return Preconditions.checkNotNull(
        instance.providePokemonsRepository(apiDataSource, cacheDataSource, pokemonsConverter),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
