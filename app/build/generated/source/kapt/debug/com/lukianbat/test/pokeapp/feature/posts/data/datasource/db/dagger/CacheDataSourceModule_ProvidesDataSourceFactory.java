// Generated by Dagger (https://google.github.io/dagger).
package com.lukianbat.test.pokeapp.feature.posts.data.datasource.db.dagger;

import com.lukianbat.test.pokeapp.feature.posts.data.datasource.db.PokemonCacheDataSource;
import com.lukianbat.test.pokeapp.feature.posts.data.datasource.db.PokemonDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class CacheDataSourceModule_ProvidesDataSourceFactory
    implements Factory<PokemonCacheDataSource> {
  private final CacheDataSourceModule module;

  private final Provider<PokemonDao> daoProvider;

  public CacheDataSourceModule_ProvidesDataSourceFactory(
      CacheDataSourceModule module, Provider<PokemonDao> daoProvider) {
    this.module = module;
    this.daoProvider = daoProvider;
  }

  @Override
  public PokemonCacheDataSource get() {
    return providesDataSource(module, daoProvider.get());
  }

  public static CacheDataSourceModule_ProvidesDataSourceFactory create(
      CacheDataSourceModule module, Provider<PokemonDao> daoProvider) {
    return new CacheDataSourceModule_ProvidesDataSourceFactory(module, daoProvider);
  }

  public static PokemonCacheDataSource providesDataSource(
      CacheDataSourceModule instance, PokemonDao dao) {
    return Preconditions.checkNotNull(
        instance.providesDataSource(dao),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
