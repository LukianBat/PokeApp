// Generated by Dagger (https://google.github.io/dagger).
package com.lukianbat.test.pokeapp.feature.posts.data.datasource.api.dagger;

import com.lukianbat.test.pokeapp.feature.posts.data.datasource.api.PokemonListApi;
import com.lukianbat.test.pokeapp.feature.posts.data.datasource.api.PokemonListApiDataSource;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ApiDataSourceModule_ProvidesDataSourceFactory
    implements Factory<PokemonListApiDataSource> {
  private final ApiDataSourceModule module;

  private final Provider<PokemonListApi> apiProvider;

  public ApiDataSourceModule_ProvidesDataSourceFactory(
      ApiDataSourceModule module, Provider<PokemonListApi> apiProvider) {
    this.module = module;
    this.apiProvider = apiProvider;
  }

  @Override
  public PokemonListApiDataSource get() {
    return providesDataSource(module, apiProvider.get());
  }

  public static ApiDataSourceModule_ProvidesDataSourceFactory create(
      ApiDataSourceModule module, Provider<PokemonListApi> apiProvider) {
    return new ApiDataSourceModule_ProvidesDataSourceFactory(module, apiProvider);
  }

  public static PokemonListApiDataSource providesDataSource(
      ApiDataSourceModule instance, PokemonListApi api) {
    return Preconditions.checkNotNull(
        instance.providesDataSource(api),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
